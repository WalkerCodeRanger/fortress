/*******************************************************************************
    Copyright 2007 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************/

/*
 * Definition of Fortress method declarations.
 */
module Method(Param, Header, Type, NoNewlineExpr, Identifier, Keyword, Symbol,
              Spacing);

import Param;
import Header;
import Type;
import NoNewlineExpr;
import Identifier;
import Keyword;
import Symbol;
import Spacing;

/* MdDecl ::=
   MdDef
 | (abstract w)? FnMods? MdHeaderFront FnHeaderClause
 */
FnDefOrDecl MdDecl =
     MdDef
   / a1:(abstract w)? a2:FnMods? a3:MdHeaderFront a4:FnHeaderClause
     { List<Modifier> mods = new ArrayList<Modifier>();
       if (a1 != null)
           mods.add(new Modifier.Abstract(createSpan(yyStart,8)));
       if (a2 != null) mods.addAll(a2);
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount), mods,
                                          a3.getReceiver(), a3, a4);
     };

/* MdDef ::= FnMods? MdHeaderFront FnHeaderClause w = w NoNewlineExpr */
FnDecl MdDef =
     a1:FnMods? a2:MdHeaderFront a3:FnHeaderClause w equals w a4:NoNewlineExpr
     { if (a1 == null) a1 = FortressUtil.emptyModifiers();
       yyValue = FortressUtil.mkFnDecl(createSpan(yyStart,yyCount), a1,
                                       a2.getReceiver(), a2, a3, a4);
     };

/* AbsMdDecl ::= (abstract w)? AbsFnMods? MdHeaderFront FnHeaderClause */
AbsFnDecl AbsMdDecl =
     a1:(abstract w)? a2:AbsFnMods? a3:MdHeaderFront a4:FnHeaderClause
     { List<Modifier> mods = new ArrayList<Modifier>();
       if (a1 != null)
           mods.add(new Modifier.Abstract(createSpan(yyStart,8)));
       if (a2 != null) mods.addAll(a2);
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount), mods,
                                          a3.getReceiver(), a3, a4);
     };

/* MdHeaderFront ::=
     (Receiver.)?Id (w StaticParams)? w MdValParam
   | OpHeaderFront
 */
private FnHeaderFront MdHeaderFront =
     a1:(Receiver dot)? a2:Id a3:(w StaticParams)? w a4:ValParam
     { Option<Id> receiver;
       if (a1 == null) receiver = None.<Id>make();
       else            receiver = Some.<Id>make(a1);
       if (a3 == null) a3 = FortressUtil.emptyStaticParams();
       yyValue = new FnHeaderFront(receiver,
                                   new Fun(createSpan(yyStart,yyCount), a2),
                                   a3, a4);
     }
   / OpHeaderFront ;

/* Receiver ::= Id | self */
private Id Receiver =
     Id
   / self { yyValue = new Id(createSpan(yyStart,yyCount), "self"); };

/* GetterSetterDecl ::=
   GetterSetterDef
 | (abstract w) FnMods? GetterSetterMod MdHeaderFront FnHeaderClause
 */
FnDefOrDecl GetterSetterDecl =
     GetterSetterDef
   / a1:(abstract w)? a2:FnMods? a3:GetterSetterMod a4:MdHeaderFront
     a5:FnHeaderClause
     { List<Modifier> mods = new ArrayList<Modifier>();
       if (a1 != null)
           mods.add(new Modifier.Abstract(createSpan(yyStart,8)));
       if (a2 != null) mods.addAll(a2);
       mods.add(a3);
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount), mods,
                                          a4.getReceiver(), a4, a5);
     };

/* GetterSetterDef ::=
   FnMods? GetterSetterMod MdHeaderFront FnHeaderClause w = w NoNewlineExpr
 */
FnDefOrDecl GetterSetterDef =
     a1:FnMods? a2:GetterSetterMod a3:MdHeaderFront a4:FnHeaderClause w equals w
     a5:NoNewlineExpr
     { if (a1 == null) a1 = new ArrayList<Modifier>();
       a1.add(a2);
       yyValue = FortressUtil.mkFnDecl(createSpan(yyStart,yyCount), a1,
                                       a3.getReceiver(), a3, a4, a5);
     };

/* GetterSetterMod ::= getter w | setter w */
private Modifier GetterSetterMod =
     a1:getter w { yyValue = new Modifier.Getter(createSpan(yyStart,yyCount));}
   / a1:setter w { yyValue = new Modifier.Setter(createSpan(yyStart,yyCount));};

/* AbsGetterSetterDecl ::=
     (abstract w) AbsFnMods? GetterSetterMod MdHeaderFront FnHeaderClause
 */
AbsFnDecl AbsGetterSetterDecl =
     a1:(abstract w)? a2:AbsFnMods? a3:GetterSetterMod a4:MdHeaderFront
     a5:FnHeaderClause
     { List<Modifier> mods = new ArrayList<Modifier>();
       if (a1 != null)
           mods.add(new Modifier.Abstract(createSpan(yyStart,8)));
       if (a2 != null) mods.addAll(a2);
       mods.add(a3);
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount), mods,
                                          a4.getReceiver(), a4, a5);
     };

/* Coercion ::=
     coerce (w StaticParams)? w ( w Id w IsType w ) CoercionClauses w (widens w)?
     = w NoNewlineExpr
 */
DefOrDecl Coercion =
     coerce a1:(w StaticParams)? w openparen w a2:Id w a3:IsType w closeparen
     a4:CoercionClauses w a5:(widens w)? equals w a6:NoNewlineExpr
     { if (a1 == null) a1 = FortressUtil.emptyStaticParams();
       List<Param> params = FortressUtil.mkList(new Param(a2, a3));
       List<Modifier> mods = new ArrayList<Modifier>();
       if (a5 != null) mods.add(new Modifier.Widens(createSpan(yyStart,8)));
       Span span = createSpan(yyStart+9,8);
       yyValue = FortressUtil.mkFnDecl(createSpan(yyStart,yyCount), mods,
                                       new Fun(span, new Id(span,"coerce")), a1,
                                       params, a4, a6);
     };

/* AbsCoercion ::=
     coerce (w StaticParams)? w ( w Id w IsType w ) CoercionClauses (w widens)?
 */
DefOrDecl AbsCoercion =
     coerce a1:(w StaticParams)? w openparen w a2:Id w a3:IsType w closeparen
     a4:CoercionClauses a5:(w widens)?
     { if (a1 == null) a1 = FortressUtil.emptyStaticParams();
       List<Param> params = FortressUtil.mkList(new Param(a2, a3));
       List<Modifier> mods = new ArrayList<Modifier>();
       if (a5 != null) mods.add(new Modifier.Widens(createSpan(yyStart,8)));
       Span span = createSpan(yyStart+9,8);
       yyValue = FortressUtil.mkAbsFnDecl(createSpan(yyStart,yyCount), mods,
                                          new Fun(span, new Id(span,"coerce")),
                                          a1, params, a4);
    };
