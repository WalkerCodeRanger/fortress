(*******************************************************************************
    Copyright 2007 Sun Microsystems, Inc.,
    4150 Network Circle, Santa Clara, California 95054, U.S.A.
    All rights reserved.

    U.S. Government Rights - Commercial software.
    Government users are subject to the Sun Microsystems, Inc. standard
    license agreement and applicable provisions of the FAR and its supplements.

    Use is subject to license terms.

    This distribution may include materials developed by third parties.

    Sun, Sun Microsystems, the Sun logo and Java are trademarks or registered
    trademarks of Sun Microsystems, Inc. in the U.S. and other countries.
 ******************************************************************************)

component newIntPrim
export Executable

assert(s:String,a:Boolean):() = do
  println(s)
  if NOT a then
      println("FAIL: assert")
  end
end

assertEq(s:String, a:ZZ64, b:ZZ64):() = do
  println(s)
  if a=/=b then
      println("FAIL: got " a " but expected " b)
  end
end

run(args:String...) = do
    assertEq("Add",  widen(124867) + -(234597), widen(-109730) )
    assertEq("Sub",  widen(124867) -  234597, widen(-109730) )
    assertEq("Mul1", widen(5872)  8124,  widen(47704128) )
    assertEq("Mul2", widen(5872) (-(8124)), widen(-47704128) )
    assertEq("Div1", widen(65536) DIV 35, widen(1872))
    assertEq("Rem1", widen(65536) REM 35, widen(16))
    assertEq("Mod1", widen(65536) MOD 35, widen(16))
    assertEq("Div2", widen(-65536) DIV 35, widen(-1872))
    assertEq("Rem2", widen(-65536) REM 35, widen(-16))
    assertEq("Mod2", widen(-65536) MOD 35, widen(19))
    assertEq("Gcd", widen(65535) GCD 32769, widen(3))
    assertEq("Lcm", widen(65535) LCM 32769, widen(715838805))
    assertEq("Choose", widen(23) CHOOSE 14, widen(817190) )
    assertEq("And", widen(5) BITAND 6, widen(4))
    assertEq("Or", widen(5) BITOR 6, widen(7))
    assertEq("Xor", widen(5) BITXOR 6, widen(3))
    assertEq("Not", BITNOT widen(6), widen(-7))
    assertEq("Lsh", widen(-3) LSHIFT 3, widen(-24))
    assertEq("Rsh", widen(-24) RSHIFT 3, widen(-3))
    assert("LT", widen(-3425234) <= widen(23145))
end

end
